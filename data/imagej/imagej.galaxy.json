{
    "Available_on_UseGalaxy.eu": 27,
    "Description": "ImageJ2 is a new version of ImageJ for the next generation of multidimensionalimage data, with a focus on scientific imaging.",
    "EDAM_operation": "Image analysis, Image annotation, Visualisation",
    "EDAM_operation_(no_superclasses)": "Image analysis, Image annotation, Visualisation",
    "EDAM_topic": "Imaging",
    "EDAM_topic_(no_superclasses)": "Imaging",
    "Galaxy_tool_ids": "imagej2_adjust_threshold_binary, imagej2_analyze_particles_binary, imagej2_analyze_skeleton, imagej2_binary_to_edm, imagej2_bunwarpj_adapt_transform, imagej2_bunwarpj_align, imagej2_bunwarpj_compare_elastic, imagej2_bunwarpj_compare_elastic_raw, imagej2_bunwarpj_compare_raw, imagej2_bunwarpj_compose_elastic, imagej2_bunwarpj_compose_raw, imagej2_bunwarpj_compose_raw_elastic, imagej2_bunwarpj_convert_to_raw, imagej2_bunwarpj_elastic_transform, imagej2_bunwarpj_raw_transform, imagej2_create_image, imagej2_enhance_contrast, imagej2_find_edges, imagej2_find_maxima, imagej2_make_binary, imagej2_math, imagej2_noise, imagej2_shadows, imagej2_sharpen, imagej2_skeletonize3d, imagej2_smooth, imagej2_watershed_binary",
    "Galaxy_wrapper_id": "imagej2",
    "Galaxy_wrapper_owner": "imgteam",
    "Galaxy_wrapper_parsed_folder": "https://github.com/bgruening/galaxytools/tree/master/tools/image_processing/imagej2",
    "Galaxy_wrapper_source": "https://github.com/bgruening/galaxytools/tree/master/tools/image_processing/imagej2",
    "Galaxy_wrapper_version": "20170530",
    "No._of_tool_users_(2022-2023)_(usegalaxy.eu)": 26,
    "Source": "http://fiji.sc",
    "Status": "To update",
    "ToolShed_categories": "Imaging",
    "ToolShed_id": "imagej2",
    "Tools_available_on_UseGalaxy.cz": 27,
    "Tools_available_on_UseGalaxy.eu": 27,
    "Tools_available_on_UseGalaxy.no": 27,
    "Total_tool_usage_(usegalaxy.eu)": 1537,
    "biii": "imagej2",
    "bio.tool_description": "It is a public domain Java image processing program, which was designed with an open architecture. Custom acquisition, analysis and processing plugins can be developed using ImageJâ€™s built-in editor and a Java compiler. User-written plugins make it possible to solve many image processing and analysis problems, from three-dimensional live-cell imaging, to radiological image processing, multiple imaging system data comparisons to automated hematology systems.",
    "bio.tool_id": "imagej",
    "bio.tool_ids": "imagej",
    "bio.tool_name": "ImageJ2"
}
