{
    "accessibility": "Open access",
    "additionDate": "2023-05-15T12:31:54.971052Z",
    "biotoolsCURIE": "biotools:jloh",
    "biotoolsID": "jloh",
    "collectionID": [
        "IMPaCT-Data"
    ],
    "cost": "Free of charge",
    "description": "A toolkit to infer and analyse loss of heterozygosity (LOH) blocks starting from a reference genome (FASTA), mapped reads (BAM) and called variants (VCF).",
    "download": [
        {
            "type": "Software package",
            "url": "https://github.com/Gabaldonlab/jloh",
            "version": "v1.0.1"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "elixirCommunity": [
        "Marine Metagenomics",
        "Microbial Biotechnology",
        "Plant Sciences"
    ],
    "function": [
        {
            "cmd": "jloh extract --vcf <VCF> --ref <FASTA> --bam <BAM> [options]",
            "input": [
                {
                    "data": {
                        "term": "DNA sequence",
                        "uri": "http://edamontology.org/data_3494"
                    },
                    "format": [
                        {
                            "term": "BAM",
                            "uri": "http://edamontology.org/format_2572"
                        },
                        {
                            "term": "FASTA",
                            "uri": "http://edamontology.org/format_1929"
                        },
                        {
                            "term": "VCF",
                            "uri": "http://edamontology.org/format_3016"
                        }
                    ]
                }
            ],
            "operation": [
                {
                    "term": "Genetic variation analysis",
                    "uri": "http://edamontology.org/operation_3197"
                },
                {
                    "term": "Sequence feature comparison",
                    "uri": "http://edamontology.org/operation_0256"
                },
                {
                    "term": "Variant pattern analysis",
                    "uri": "http://edamontology.org/operation_3504"
                }
            ],
            "output": [
                {
                    "data": {
                        "term": "Annotation track",
                        "uri": "http://edamontology.org/data_3002"
                    },
                    "format": [
                        {
                            "term": "BED",
                            "uri": "http://edamontology.org/format_3003"
                        }
                    ]
                }
            ]
        }
    ],
    "homepage": "https://github.com/Gabaldonlab/jloh",
    "language": [
        "Python"
    ],
    "lastUpdate": "2024-11-24T14:32:13.809703Z",
    "license": "GPL-3.0",
    "maturity": "Mature",
    "name": "JLOH",
    "operatingSystem": [
        "Linux"
    ],
    "owner": "Gabaldonlab",
    "publication": [
        {
            "doi": "10.1016/j.csbj.2023.11.003",
            "metadata": {
                "abstract": "Heterozygosity is a genetic condition in which two or more alleles are found at a genomic locus. Individuals that are the offspring of genetically divergent yet still interfertile parents (e.g. hybrids) are highly heterozygous. One of the most studied aspects in the genomes of these individuals is the loss of their original heterozygosity (LOH) when multi-allelic sites lose one of their two alleles by converting it to the other, or by remaining hemizygous at that site. The region undergoing LOH may involve a single nucleotide polymorphism (SNP) or a longer stretch of DNA. LOH is deeply interconnected with adaptation but the in silico techniques to infer evolutionary relevant LOH blocks are hardly standardised, and a general tool to infer and analyse them across genomic contexts and species is missing. Here, we present JLOH, a computational toolkit for the inference and exploration of LOH blocks in genomes with at least 1% heterozygosity. JLOH only requires commonly available genomic sequencing data as input. Starting from mapped reads, called variants and a reference genome sequence, JLOH infers candidate LOH blocks based on SNP density (SNPs/kbp) and read coverage per position. Considering that most organisms that undergo extensive LOH are hybrids, JLOH has been designed to capture any subgenomic LOH pattern, assigning each LOH block to its subgenome of origin.",
                "authors": [
                    {
                        "name": "Gabaldon T."
                    },
                    {
                        "name": "Muya V.N."
                    },
                    {
                        "name": "Schiavinato M."
                    },
                    {
                        "name": "del Olmo V."
                    }
                ],
                "citationCount": 1,
                "date": "2023-01-01T00:00:00Z",
                "journal": "Computational and Structural Biotechnology Journal",
                "title": "JLOH: Inferring loss of heterozygosity blocks from sequencing data"
            },
            "pmcid": "PMC10708961",
            "pmid": "38074465",
            "type": [
                "Primary"
            ],
            "version": "v1.0.1"
        },
        {
            "doi": "10.1101/2023.05.04.539368",
            "type": [
                "Primary"
            ],
            "version": "v1.0.1"
        },
        {
            "doi": "10.5281/zenodo.10036458",
            "type": [
                "Primary"
            ],
            "version": "v1.0.1"
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "Genetic variation",
            "uri": "http://edamontology.org/topic_0199"
        },
        {
            "term": "Genomics",
            "uri": "http://edamontology.org/topic_0622"
        },
        {
            "term": "Sequence analysis",
            "uri": "http://edamontology.org/topic_0080"
        }
    ],
    "version": [
        "v1.0.1"
    ]
}
