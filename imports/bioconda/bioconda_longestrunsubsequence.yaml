about:
  description: This is an implementation of the longest run subsequence problem, introduced
    in (Schrinner et al., WABI 2020) https://drops.dagstuhl.de/opus/volltexte/2020/12795/.
    It describes a string problem, which looks for the longest subsequence of a string
    such that this sequence contains at most one consecutive run for each character
    in the underlying alphabet. The code contains two different algorithms (based
    on Integer Linear Programming and on Dynamic Programming) as described in the
    publication. The problem appears in the context of homology-based scaffolding
    of two contig sets, originating from two individuals of the same species.
  home: https://github.com/AlBi-HHU/longest-run-subsequence
  license: MIT
  license_file: LICENSE
  summary: Implementation of a solver for the Longest Run Subsequence Problem. Given
    a sequence as input, compute a longest subsequence such that there is at most
    one run for every character.
build:
  noarch: python
  number: 0
  script: ' -m pip install --no-deps -vv .'
extra:
  recipe-maintainers:
  - AlBi-HHU
package:
  name: longestrunsubsequence
  version: 1.0.1
requirements:
  host:
  - pip
  - python >=3.5
  run:
  - python >=3.5
  run_constrained:
  - pulp >= 2
source:
  sha256: 75440b9097ee018762febffd2495be3bd24ccbf3642643e1ed7e9b1cb157d76c
  url: https://github.com/AlBi-HHU/longest-run-subsequence/archive/v1.0.1.tar.gz
test:
  imports:
  - longestrunsubsequence
